Código beta para a IHM utilizando Arduino:
//arduíno dedicado para leitura e controle da IHM, transmissão de dados analógico.

Código IHM
// Bibliotecas
#include <Arduino.h>
#include <LCD.h>

// Definições de pinos
#define PINO_LCD_RS 2
#define PINO_LCD_EN 3
#define PINO_LCD_D4 4
#define PINO_LCD_D5 5
#define PINO_LCD_D6 6
#define PINO_LCD_D7 7

// Definições de servos
#define NUM_SERVOS 5
#define PINO_SERVO_1 8
#define PINO_SERVO_2 9
#define PINO_SERVO_3 10
#define PINO_SERVO_4 11
#define PINO_SERVO_5 12

// Definições de memória
#define MEMORIA_MAX 3
#define NUM_PASSOS 10

// Estrutura de dados para movimento
typedef struct {
  int servo1;
  int servo2;
  int servo3;
  int servo4;
  int servo5;
} Movimento;

// Array para armazenar movimentos
Movimento memoria[MEMORIA_MAX][NUM_PASSOS];

// LCD
LCD lcd(PINO_LCD_RS, PINO_LCD_EN, PINO_LCD_D4, PINO_LCD_D5, PINO_LCD_D6, PINO_LCD_D7);

// Servos
Servo servo1;
Servo servo2;
Servo servo3;
Servo servo4;
Servo servo5;

void setup() {
  // Inicializar LCD
  lcd.begin(16, 2);
  
  // Inicializar servos
  servo1.attach(PINO_SERVO_1);
  servo2.attach(PINO_SERVO_2);
  servo3.attach(PINO_SERVO_3);
  servo4.attach(PINO_SERVO_4);
  servo5.attach(PINO_SERVO_5);
}

void loop() {
  // Menu principal
  lcd.setCursor(0, 0);
  lcd.print("1. Gravar mov.");
  lcd.setCursor(0, 1);
  lcd.print("2. Executar mov.");
  lcd.setCursor(0, 2);
  lcd.print("3. Limpar mem.");
  
  // Ler tecla pressionada
  int tecla = lerTecla();
  
  switch (tecla) {
    case 1:
      gravarMovimento();
      break;
    case 2:
      executarMovimento();
      break;
    case 3:
      limparMemoria();
      break;
  }
}

// Função para ler tecla pressionada
int lerTecla() {
  int tecla = 0;
  if (Serial.available() > 0) {
    tecla = Serial.read();
  }
  return tecla;
}

// Função para gravar movimento
void gravarMovimento() {
  int memoriaSel = 0;
  int passoSel = 0;
  
  lcd.setCursor(0, 0);
  lcd.print("Sel. memoria:");
  lcd.setCursor(0, 1);
  lcd.print("1-3");
  
  while (true) {
    int tecla = lerTecla();
    if (tecla >= 1 && tecla <= 3) {
      memoriaSel = tecla - 1;
      break;
    }
  }
  
  lcd.setCursor(0, 0);
  lcd.print("Sel. passo:");
  lcd.setCursor(0, 1);
  lcd.print("1-10");
  
  while (true) {
    int tecla = lerTecla();
    if (tecla >= 1 && tecla <= 10) {
      passoSel = tecla - 1;
      break;
    }
  }
  
  lcd.setCursor(0, 0);
  lcd.print("Insira ângulos:");
  
  for (int i = 0; i < NUM_SERVOS; i++) {
    int angulo = lerAngulo();
    memoria[memoriaSel][passoSel].servo1 = angulo;
    memoria[memoriaSel][passoSel].servo2 = angulo;
    memoria[memoriaSel][passoSel].servo3 = angulo;
    memoria[memoriaSel][passoSel].servo4 = angulo;
    memoria[memoriaSel][passoSel].servo5 = angulo;
  }
}

// Função para executar movimento
void executarMovimento() {
  int memoriaSel = 0;
  
  lcd.setCursor(0, 0);
  lcd.print("Sel. memoria:");
  lcd.setCursor(0, 1);
  lcd.print("1-3");
  
  while (true) {
    int tecla = lerTecla();
    if (tecla >= 1
```